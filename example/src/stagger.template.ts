export const string = "<h2>Staggering Examples</h2><p>Tap anywhere below</p><fieldset (click)=\"stagArray = stagArray.length ? [] : [1,2,3,4,5,6,7,8]\"><legend>&lt;div [@childStag{{fxStaggerSpeed}}]=\"{{ stagArray.length }}\"&gt;</legend><div class=\"wrap\" [@childStag]=\"!fxStaggerSpeed && stagArray.length\" [@childStag100]=\"fxStaggerSpeed==100 && stagArray.length\" [@childStag200]=\"fxStaggerSpeed==200 && stagArray.length\" [@childStag300]=\"fxStaggerSpeed==300 && stagArray.length\" [@childStag400]=\"fxStaggerSpeed==400 && stagArray.length\" [@childStag500]=\"fxStaggerSpeed==500 && stagArray.length\" [@childStag600]=\"fxStaggerSpeed==600 && stagArray.length\" [@childStag700]=\"fxStaggerSpeed==700 && stagArray.length\" [@childStag800]=\"fxStaggerSpeed==800 && stagArray.length\" [@childStag900]=\"fxStaggerSpeed==900 && stagArray.length\" [@childStag1000]=\"fxStaggerSpeed==1000 && stagArray.length\" [@childStag1500]=\"fxStaggerSpeed==1500 && stagArray.length\" [@childStag2000]=\"fxStaggerSpeed==2000 && stagArray.length\"><div class=\"demo-wrap\" *ngFor=\"let x of stagArray;let index=index\" [@fadeIn]=\"{value:FxSession.fxForward=='fadeIn' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInDown]=\"{value:FxSession.fxForward=='fadeInDown' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInLeft]=\"{value:FxSession.fxForward=='fadeInLeft' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInRight]=\"{value:FxSession.fxForward=='fadeInRight' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInUp]=\"{value:FxSession.fxForward=='fadeInUp' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceIn]=\"{value:FxSession.fxForward=='bounceIn' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInDown]=\"{value:FxSession.fxForward=='bounceInDown' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInLeft]=\"{value:FxSession.fxForward=='bounceInLeft' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInRight]=\"{value:FxSession.fxForward=='bounceInRight' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInUp]=\"{value:FxSession.fxForward=='bounceInUp' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateIn]=\"{value:FxSession.fxForward=='rotateIn' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInDownLeft]=\"{value:FxSession.fxForward=='rotateInDownLeft' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInDownRight]=\"{value:FxSession.fxForward=='rotateInDownRight' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInUpLeft]=\"{value:FxSession.fxForward=='rotateInUpLeft' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInUpRight]=\"{value:FxSession.fxForward=='rotateInUpRight' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInUp]=\"{value:FxSession.fxForward=='slideInUp' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInDown]=\"{value:FxSession.fxForward=='slideInDown' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInLeft]=\"{value:FxSession.fxForward=='slideInLeft' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInRight]=\"{value:FxSession.fxForward=='slideInRight' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomIn]=\"{value:FxSession.fxForward=='zoomIn' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInDown]=\"{value:FxSession.fxForward=='zoomInDown' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInLeft]=\"{value:FxSession.fxForward=='zoomInLeft' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInRight]=\"{value:FxSession.fxForward=='zoomInRight' ? stagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInUp]=\"{value:FxSession.fxForward=='zoomInUp' ? stagArray.length : 'nofx', params:{time:fxTime}}\"><div class=\"demo-item\">*ngFor:{{index}}:{{ x }}</div></div></div></fieldset><div style=\"background-color:#CCC;padding:.5em;\"><p style=\"text-align:center\"><button (click)=\"stagArray.push(1,2,3,4,5)\">add 5</button><button (click)=\"stagArray.splice(0,5)\">remove 5</button></p><div style=\"text-align:center\">Above stagger speed:&nbsp;<select [(ngModel)]=\"fxStaggerSpeed\"><option *ngFor=\"let item of speeds\" [value]=\"item\">{{ item }}</option></select>&nbsp;&nbsp;&nbsp;"+
"\nChange above fx Type:&nbsp;<select-fx [(model)]=\"FxSession.fxForward\"></select-fx>&nbsp;&nbsp;&nbsp;"+
"\nSpeed:<input [(ngModel)]=\"fxTime\"/></div><p>DETAILS: The above fx boxes example defines:</p><ul><li>An outer element with an @childStag fx trigger with a boolean value</li><li>An inner element fx definition with same boolean value as @childStag</li><li>All fx transistions ignite when boolean value changes and @childStag imposes itself onto the child fxs</li><li>NOTE: As of 2/19/18, you must put the stagger speed in the trigger name as angular stagger currently does not accept params</li></ul><h4>Code Sample 1</h4><textarea style=\"width:100%;height:80px\" wrap=\"off\" readonly=\"readonly\">&lt;div [@childStag{{fxStaggerSpeed}}]=\"stagArray.length\"&gt;"+
"\n  &lt;div *ngFor=\"let x of stagArray\" [@{{FxSession.fxForward}}]=\"stagArray.length\"&gt;"+
"\n    item:x"+
"\n  &lt;/div&gt;"+
"\n&lt;/div&gt;</textarea><h4>Code Sample 2</h4><textarea style=\"width:100%;height:125px\" wrap=\"off\" readonly=\"readonly\">&lt;div [@childStag{{fxStaggerSpeed}}]=\"&#123;value:stagArray.length, params:{time:'{{fxTime}}'}&#125;\"&gt;"+
"\n  &lt;div"+
"\n    *ngFor = \"let x of stagArray\""+
"\n    [@{{FxSession.fxForward}}] = \"&#123;value:stagArray.length, params:&#123;time:'{{fxTime}}'&#125;&#125;\""+
"\n  &gt;"+
"\n    item:x"+
"\n  &lt;/div&gt;"+
"\n&lt;/div&gt;"+
"\n</textarea></div><br/><h3>Stagger Table Rows Example</h3><p>Tap anywhere below</p><fieldset (click)=\"rowStagArray = rowStagArray.length ? [] : [1,2,3,4,5,6,7,8]\"><legend>&lt;div [@childStag{{fxStaggerSpeed}}]=\"{{ rowStagArray.length }}\"&gt;</legend><div [@childStag]=\"!fxStaggerSpeed && rowStagArray.length\" [@childStag100]=\"fxStaggerSpeed==100 && rowStagArray.length\" [@childStag200]=\"fxStaggerSpeed==200 && rowStagArray.length\" [@childStag300]=\"fxStaggerSpeed==300 && rowStagArray.length\" [@childStag400]=\"fxStaggerSpeed==400 && rowStagArray.length\" [@childStag500]=\"fxStaggerSpeed==500 && rowStagArray.length\" [@childStag600]=\"fxStaggerSpeed==600 && rowStagArray.length\" [@childStag700]=\"fxStaggerSpeed==700 && rowStagArray.length\" [@childStag800]=\"fxStaggerSpeed==800 && rowStagArray.length\" [@childStag900]=\"fxStaggerSpeed==900 && rowStagArray.length\" [@childStag1000]=\"fxStaggerSpeed==1000 && rowStagArray.length\" [@childStag1500]=\"fxStaggerSpeed==1500 && rowStagArray.length\" [@childStag2000]=\"fxStaggerSpeed==2000 && rowStagArray.length\"><table style=\"width:100%\"><tr *ngFor=\"let x of rowStagArray;let index=index\" style=\"background-color:#CCC\" [@fadeIn]=\"{value:FxSession.fxForward=='fadeIn' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInDown]=\"{value:FxSession.fxForward=='fadeInDown' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInLeft]=\"{value:FxSession.fxForward=='fadeInLeft' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInRight]=\"{value:FxSession.fxForward=='fadeInRight' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@fadeInUp]=\"{value:FxSession.fxForward=='fadeInUp' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceIn]=\"{value:FxSession.fxForward=='bounceIn' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInDown]=\"{value:FxSession.fxForward=='bounceInDown' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInLeft]=\"{value:FxSession.fxForward=='bounceInLeft' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInRight]=\"{value:FxSession.fxForward=='bounceInRight' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@bounceInUp]=\"{value:FxSession.fxForward=='bounceInUp' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateIn]=\"{value:FxSession.fxForward=='rotateIn' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInDownLeft]=\"{value:FxSession.fxForward=='rotateInDownLeft' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInDownRight]=\"{value:FxSession.fxForward=='rotateInDownRight' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInUpLeft]=\"{value:FxSession.fxForward=='rotateInUpLeft' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@rotateInUpRight]=\"{value:FxSession.fxForward=='rotateInUpRight' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInUp]=\"{value:FxSession.fxForward=='slideInUp' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInDown]=\"{value:FxSession.fxForward=='slideInDown' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInLeft]=\"{value:FxSession.fxForward=='slideInLeft' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@slideInRight]=\"{value:FxSession.fxForward=='slideInRight' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomIn]=\"{value:FxSession.fxForward=='zoomIn' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInDown]=\"{value:FxSession.fxForward=='zoomInDown' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInLeft]=\"{value:FxSession.fxForward=='zoomInLeft' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInRight]=\"{value:FxSession.fxForward=='zoomInRight' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\" [@zoomInUp]=\"{value:FxSession.fxForward=='zoomInUp' ? rowStagArray.length : 'nofx', params:{time:fxTime}}\"><td>{{index}}</td><td>Item Row {{ x }}</td></tr></table></div></fieldset><div style=\"background-color:#CCC;padding:.5em;\"><p style=\"text-align:center\"><button (click)=\"rowStagArray.push(1,2,3,4,5)\">add 5</button><button (click)=\"rowStagArray.splice(0,5)\">remove 5</button></p><div style=\"text-align:center\">Above row stagger speed:&nbsp;<select [(ngModel)]=\"fxStaggerSpeed\"><option *ngFor=\"let item of speeds\" [value]=\"item\">{{ item }}</option></select>&nbsp;&nbsp;&nbsp;"+
"\nChange above fx Type:&nbsp;<select-fx [(model)]=\"FxSession.fxForward\"> </select-fx>&nbsp;&nbsp;&nbsp;"+
"\nSpeed:<input [(ngModel)]=\"fxTime\"/></div><p>DETAILS: The above fx boxes example defines:</p><ul><li>An outer element with an @childStag fx trigger with a boolean value</li><li>An inner element fx definition with same boolean value as @childStag</li><li>All fx transistions ignite when boolean value changes and @childStag imposes itself onto the child fxs</li><li>NOTE: As of 2/19/18, you must put the stagger speed in the trigger name as angular stagger currently does not accept params</li></ul><h4>Code Sample</h4><textarea style=\"width:100%;height:125px\" wrap=\"off\" readonly=\"readonly\">&lt;div [@childStag{{fxStaggerSpeed}}]=\"stagArray.length\"&gt;"+
"\n  &lt;table&gt;"+
"\n    &lt;tr"+
"\n      *ngFor=\"let x of stagArray\""+
"\n      [@{{FxSession.fxForward}}] = \"&#123;value:stagArray.length, params:&#123;time:'{{fxTime}}'&#125;&#125;\""+
"\n    &gt;"+
"\n      &lt;td&gt;"+
"\n        item:x"+
"\n      &lt;/td&gt;"+
"\n    &lt;/tr&gt;"+
"\n  &lt;/table&gt;"+
"\n&lt;/div&gt;</textarea></div>"